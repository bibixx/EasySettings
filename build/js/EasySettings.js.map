{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/babel-runtime/core-js/get-iterator.js","node_modules/babel-runtime/core-js/is-iterable.js","node_modules/babel-runtime/core-js/object/define-property.js","node_modules/babel-runtime/core-js/object/entries.js","node_modules/babel-runtime/helpers/classCallCheck.js","node_modules/babel-runtime/helpers/createClass.js","node_modules/babel-runtime/helpers/slicedToArray.js","node_modules/core-js/library/fn/get-iterator.js","node_modules/core-js/library/fn/is-iterable.js","node_modules/core-js/library/fn/object/define-property.js","node_modules/core-js/library/fn/object/entries.js","node_modules/core-js/library/modules/_a-function.js","node_modules/core-js/library/modules/_add-to-unscopables.js","node_modules/core-js/library/modules/_an-object.js","node_modules/core-js/library/modules/_array-includes.js","node_modules/core-js/library/modules/_classof.js","node_modules/core-js/library/modules/_cof.js","node_modules/core-js/library/modules/_core.js","node_modules/core-js/library/modules/_ctx.js","node_modules/core-js/library/modules/_defined.js","node_modules/core-js/library/modules/_descriptors.js","node_modules/core-js/library/modules/_dom-create.js","node_modules/core-js/library/modules/_enum-bug-keys.js","node_modules/core-js/library/modules/_export.js","node_modules/core-js/library/modules/_fails.js","node_modules/core-js/library/modules/_global.js","node_modules/core-js/library/modules/_has.js","node_modules/core-js/library/modules/_hide.js","node_modules/core-js/library/modules/_html.js","node_modules/core-js/library/modules/_ie8-dom-define.js","node_modules/core-js/library/modules/_iobject.js","node_modules/core-js/library/modules/_is-object.js","node_modules/core-js/library/modules/_iter-create.js","node_modules/core-js/library/modules/_iter-define.js","node_modules/core-js/library/modules/_iter-step.js","node_modules/core-js/library/modules/_iterators.js","node_modules/core-js/library/modules/_library.js","node_modules/core-js/library/modules/_object-create.js","node_modules/core-js/library/modules/_object-dp.js","node_modules/core-js/library/modules/_object-dps.js","node_modules/core-js/library/modules/_object-gpo.js","node_modules/core-js/library/modules/_object-keys-internal.js","node_modules/core-js/library/modules/_object-keys.js","node_modules/core-js/library/modules/_object-pie.js","node_modules/core-js/library/modules/_object-to-array.js","node_modules/core-js/library/modules/_property-desc.js","node_modules/core-js/library/modules/_redefine.js","node_modules/core-js/library/modules/_set-to-string-tag.js","node_modules/core-js/library/modules/_shared-key.js","node_modules/core-js/library/modules/_shared.js","node_modules/core-js/library/modules/_string-at.js","node_modules/core-js/library/modules/_to-index.js","node_modules/core-js/library/modules/_to-integer.js","node_modules/core-js/library/modules/_to-iobject.js","node_modules/core-js/library/modules/_to-length.js","node_modules/core-js/library/modules/_to-object.js","node_modules/core-js/library/modules/_to-primitive.js","node_modules/core-js/library/modules/_uid.js","node_modules/core-js/library/modules/_wks.js","node_modules/core-js/library/modules/core.get-iterator-method.js","node_modules/core-js/library/modules/core.get-iterator.js","node_modules/core-js/library/modules/core.is-iterable.js","node_modules/core-js/library/modules/es6.array.iterator.js","node_modules/core-js/library/modules/es6.object.define-property.js","node_modules/core-js/library/modules/es6.string.iterator.js","node_modules/core-js/library/modules/es7.object.entries.js","node_modules/core-js/library/modules/web.dom.iterable.js","src/js/EasySettings.js","src/js/actions/EasySettingsMovementManager.js","src/js/sections/Section.js","src/js/sections/elements/Button.js","src/js/sections/elements/Checkbox.js","src/js/sections/elements/Dropdown.js","src/js/sections/elements/HTML.js","src/js/sections/elements/Header.js","src/js/sections/elements/Input.js","src/js/sections/elements/Progress.js","src/js/sections/elements/Radio.js","src/js/sections/elements/Slider.js","src/js/sections/elements/SliderMovementManager.js","src/js/sections/elements/Textarea.js","src/js/utils/DOMUtils.js"],"names":[],"mappings":"AAAA;ACAA;;ACAA;;ACAA;;ACAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;;ACFA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;;ACJA;AACA;;ACDA;AACA;AACA;AACA;;ACHA;;ACAA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;;ACJA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;;ACAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;;ACFA;;ACAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC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","file":"EasySettings.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/is-iterable\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/entries\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();","\"use strict\";\n\nexports.__esModule = true;\n\nvar _isIterable2 = require(\"../core-js/is-iterable\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = require(\"../core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};","module.exports = function(){ /* empty */ };","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof')\n  , TAG = require('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};","module.exports = require('./_global').document && document.documentElement;","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};","'use strict';\nvar create         = require('./_object-create')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getPrototypeOf = require('./_object-gpo')\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};","module.exports = {};","module.exports = true;","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = require('./_an-object')\n  , dPs         = require('./_object-dps')\n  , enumBugKeys = require('./_enum-bug-keys')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};","var dP       = require('./_object-dp')\n  , anObject = require('./_an-object')\n  , getKeys  = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = require('./_has')\n  , toObject    = require('./_to-object')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};","exports.f = {}.propertyIsEnumerable;","var getKeys   = require('./_object-keys')\n  , toIObject = require('./_to-iobject')\n  , isEnum    = require('./_object-pie').f;\nmodule.exports = function(isEntries){\n  return function(it){\n    var O      = toIObject(it)\n      , keys   = getKeys(O)\n      , length = keys.length\n      , i      = 0\n      , result = []\n      , key;\n    while(length > i)if(isEnum.call(O, key = keys[i++])){\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};","module.exports = require('./_hide');","var def = require('./_object-dp').f\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};","var anObject = require('./_an-object')\n  , get      = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function(it){\n  var iterFn = get(it);\n  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function(it){\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    || Iterators.hasOwnProperty(classof(O));\n};","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});","// https://github.com/tc39/proposal-object-values-entries\nvar $export  = require('./_export')\n  , $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it){\n    return $entries(it);\n  }\n});","require('./es6.array.iterator');\nvar global        = require('./_global')\n  , hide          = require('./_hide')\n  , Iterators     = require('./_iterators')\n  , TO_STRING_TAG = require('./_wks')('toStringTag');\n\nfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n  var NAME       = collections[i]\n    , Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}","import DOMUtils from \"./utils/DOMUtils\";\n\nimport EasySettingsMovementManager from \"./actions/EasySettingsMovementManager\";\nimport Section from \"./sections/Section\";\n\nexport default class EasySettings {\n  constructor(x, y, title) {\n    this.container = null;\n    this.header = null;\n    this.body = null;\n    this.sections = [];\n    this.elements = {};\n    this.title = title;\n    this.pos = {\n      x: x || 8,\n      y: y || 8,\n    };\n\n    this.createSettingsContainer();\n\n    this.movementManager = new EasySettingsMovementManager(this.container, this.header);\n  }\n\n  createSettingsHeader() {\n    this.header = DOMUtils.createElement(\"header\", this.container, { className: \"es-header\" });\n\n    DOMUtils.createElement(\"span\", this.header, { innerHTML: this.title || \"EasySettings Panel\" });\n  }\n\n  createSettingsBody() {\n    this.body = DOMUtils.createElement(\"main\", this.container, { className: \"es-body\" });\n  }\n\n  createSettingsContainer() {\n    this.container = DOMUtils.createElement(\"div\", null, { className: \"es-container\" });\n    const $container = this.container;\n\n    this.createSettingsHeader();\n    this.createSettingsBody();\n\n    document.body.insertBefore($container, document.body.firstChild);\n\n    $container.style.left = `${this.pos.x}px`;\n    $container.style.top = `${this.pos.y}px`;\n  }\n\n  /* Section Creation */\n  createSection() {\n    const newSection = new Section(this.body, this.elements, this.sections.length);\n    this.sections.push(newSection);\n    return newSection;\n  }\n\n  getValue(id) {\n    return this.elements[id].getValue();\n  }\n\n  setValue(id, value) {\n    this.elements[id].setValue(value);\n  }\n}\n\nwindow.EasySettings = EasySettings;\n","let zIndex = 0;\n\nexport default class EasySettingsMovementManager {\n  static getCurrentZIndex() {\n    return zIndex++;\n  }\n\n  constructor(panel, header) {\n    this.panel = panel;\n    this.header = header;\n    this.startPos = {\n      x: 0,\n      y: 0,\n    };\n\n    this.startPosOfPanel = {\n      x: 8,\n      y: 0,\n    };\n\n    this.handleMovement = this.handleMovement.bind(this);\n    this.bindEvents();\n  }\n\n  bindEvents() {\n    this.header.addEventListener(\"mousedown\", (e) => {\n      this.startPos = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n\n      const panelOffset = this.panel.getBoundingClientRect();\n      this.startPosOfPanel = {\n        x: panelOffset.left,\n        y: panelOffset.top,\n      };\n\n      this.panel.style.zIndex = EasySettingsMovementManager.getCurrentZIndex();\n\n      document.addEventListener(\"mousemove\", this.handleMovement);\n      document.addEventListener(\"mouseup\", () => {\n        document.removeEventListener(\"mousemove\", this.handleMovement);\n      });\n    });\n  }\n\n  handleMovement(e) {\n    this.panel.style.left = `${this.startPosOfPanel.x + (e.pageX - this.startPos.x)}px`;\n    this.panel.style.top = `${this.startPosOfPanel.y + (e.pageY - this.startPos.y)}px`;\n  }\n}\n","import DOMUtils from \"../utils/DOMUtils\";\n\nimport Button from \"./elements/Button\";\nimport Checkbox from \"./elements/Checkbox\";\nimport Dropdown from \"./elements/Dropdown\";\nimport Header from \"./elements/Header\";\nimport HTML from \"./elements/HTML\";\nimport Input from \"./elements/Input\";\nimport Progress from \"./elements/Progress\";\nimport Radio from \"./elements/Radio\";\nimport Slider from \"./elements/Slider\";\nimport Textarea from \"./elements/Textarea\";\n\nexport default class Section {\n  constructor(esBody, elements, index) {\n    this.esBody = esBody;\n    this.body = null;\n    this.elements = elements;\n    this.index = index;\n    this.create();\n    return this;\n  }\n\n  create() {\n    this.body = DOMUtils.createElement(\"div\", this.esBody, { className: \"es-body__section\" });\n  }\n\n  addToContent(id, el) {\n    if (id !== null) {\n      this.elements[id] = el;\n    }\n  }\n\n  /* Adding certain elements */\n  addHeader(id, text) {\n    const element = new Header(this.body, text);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addButton(id, text, callback) {\n    const element = new Button(this.body, text, callback);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addDropdown(id, options, callback) {\n    const element = new Dropdown(this.body, options, callback);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addCheckbox(id, label, checked, callback) {\n    const element = new Checkbox(this.body, label, checked, callback);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addRadio(id, label, checkedIndex, callback) {\n    const element = new Radio(this.body, this.index, label, checkedIndex, callback);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addColorInput(id, value, callback, addOptions) {\n    const element = new Input(this.body, \"color\", value, callback, addOptions);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addTextInput(id, value, callback, addOptions) {\n    const element = new Input(this.body, \"text\", value, callback, addOptions);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addPasswordInput(id, value, callback, addOptions) {\n    const element = new Input(this.body, \"password\", value, callback, addOptions);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addNumberInput(id, value, callback, addOptions) {\n    const element = new Input(this.body, \"number\", value, callback, addOptions);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addDateInput(id, value, callback, addOptions) {\n    const element = new Input(this.body, \"date\", value, callback, addOptions);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addTimeInput(id, value, callback, addOptions) {\n    const element = new Input(this.body, \"time\", value, callback, addOptions);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addDateTimeInput(id, value, callback, addOptions) {\n    const element = new Input(this.body, \"datetime-local\", value, callback, addOptions);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addTextarea(id, value, callback, addOptions) {\n    const element = new Textarea(this.body, value, callback, addOptions);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addSlider(id, value, min, max, callback, addOptions) {\n    const element = new Slider(this.body, value, min, max, callback, addOptions);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addProgress(id, value, callback, addOptions) {\n    const element = new Progress(this.body, value, callback, addOptions);\n    this.addToContent(id, element);\n    return this;\n  }\n\n  addHTML(id, value) {\n    const element = new HTML(this.body, value);\n    this.addToContent(id, element);\n    return this;\n  }\n}\n","import DOMUtils from \"../../utils/DOMUtils\";\n\nexport default class Button {\n  constructor(section, text, callback) {\n    this.element = null;\n    this.section = section;\n    this.text = text;\n    this.callback = callback || null;\n    this.create();\n  }\n\n  create() {\n    const $button = DOMUtils.createElement(\"button\", this.section, { className: \"es-body__section__button\", innerHTML: this.text });\n\n    this.element = $button;\n\n    this.bindCallback();\n  }\n\n  bindCallback() {\n    this.element.addEventListener(\"click\", () => {\n      this.callback(this.getValue());\n    });\n  }\n\n  getValue() {\n    return this.element.innerHTML;\n  }\n\n  setValue(val) {\n    this.element.innerHTML = val;\n  }\n}\n","import DOMUtils from \"../../utils/DOMUtils\";\n\nexport default class Checkbox {\n  constructor(section, label, checked, callback) {\n    this.element = null;\n    this.section = section;\n    this.label = label;\n    this.callback = callback || null;\n    this.checked = checked;\n    this.create();\n  }\n\n  create() {\n    const $label = DOMUtils.createElement(\"label\", this.section, { className: \"es-body__section__label\" });\n\n    const $checkbox = DOMUtils.createElement(\"input\", $label, { className: \"body__section__checkbox\", innerHTML: this.label, checked: this.checked }, { \"type\": \"checkbox\" });\n\n    const $icon = DOMUtils.createElement(\"span\", $label, { className: \"es-body__section__label__icon\" }, { tabindex: 0 }); // labelIcon\n\n    DOMUtils.createElement(\"span\", $icon, { className: \"es-body__section__label__icon--focused\" }); // labelIconFocused\n\n    DOMUtils.createElement(\"span\", $label, { className: \"es-body__section__label__text\", innerHTML: this.label }); // labelText\n\n    $icon.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 32 || e.keyCode === 13) {\n        $checkbox.checked = !$checkbox.checked;\n        DOMUtils.dispatchEvent($checkbox, \"change\");\n      }\n    });\n\n    this.element = $checkbox;\n\n    this.bindCallback();\n  }\n\n  bindCallback() {\n    this.element.addEventListener(\"change\", () => {\n      this.callback(this.getValue());\n    });\n  }\n\n  getValue() {\n    return this.element.checked;\n  }\n\n  setValue(val) {\n    this.element.checked = val;\n  }\n}\n","import DOMUtils from \"../../utils/DOMUtils\";\n\nexport default class Dropdown {\n  constructor(section, options, callback) {\n    this.element = null;\n    this.section = section;\n    this.options = options || [];\n    this.callback = callback || null;\n    this.create();\n  }\n\n  create() {\n    const $dropdown = DOMUtils.createElement(\"select\", this.section, { className: \"body__section__dropdown\" });\n\n    this.options.forEach((v) => {\n      const $option = document.createElement(\"option\");\n      $option.innerHTML = v;\n      $dropdown.appendChild($option);\n    });\n    this.element = $dropdown;\n\n    this.bindCallback();\n  }\n\n  bindCallback() {\n    this.element.addEventListener(\"change\", () => {\n      this.callback(this.getValue());\n    });\n  }\n\n  getValue() {\n    return this.element.value;\n  }\n\n  setValue(val) {\n    this.element.value = val;\n  }\n}\n","import DOMUtils from \"../../utils/DOMUtils\";\n\nexport default class HTML {\n  constructor(section, value) {\n    this.element = null;\n    this.section = section;\n    this.value = value;\n    this.create();\n  }\n\n  create() {\n    const $cont = DOMUtils.createElement(\"div\", this.section, { className: \"es-body__section__html\", innerHTML: this.value });\n\n    this.element = $cont;\n  }\n\n  getValue() {\n    return this.element.innerHTML;\n  }\n\n  setValue(val) {\n    this.element.innerHTML = val;\n  }\n}\n","import DOMUtils from \"../../utils/DOMUtils\";\n\nexport default class Header {\n  constructor(section, text) {\n    this.element = null;\n    this.section = section;\n    this.text = text;\n    this.create();\n  }\n\n  create() {\n    const $header = DOMUtils.createElement(\"p\", this.section, { className: \"body__section__header\", innerHTML: this.text });\n\n    this.element = $header;\n  }\n\n  getValue() {\n    return this.element.innerHTML;\n  }\n\n  setValue(val) {\n    this.element.innerHTML = val;\n  }\n}\n","import DOMUtils from \"../../utils/DOMUtils\";\n\nexport default class Input {\n  constructor(section, type, value, callback, addOptions) {\n    this.element = null;\n    this.section = section;\n    this.value = value;\n    this.type = type;\n    this.callback = callback || null;\n    this.addOptions = addOptions;\n    this.additionalElement = null;\n    this.create();\n  }\n\n  create() {\n    const $inputGroup = DOMUtils.createElement(\"span\", this.section, { className: \"es-body__section__input-group\" });\n    let $input = null;\n\n    if (this.type === \"color\") {\n      this.additionalElement = DOMUtils.createElement(\"label\", $inputGroup, { className: \"es-body__section__label-color\" }); // Color label\n      this.additionalElement.style.background = this.value;\n\n      if (this.value.match(/^#[abcdef0123456789]{3}$/i)) {\n        this.value = `#${this.value[1]}${this.value[1]}${this.value[2]}${this.value[2]}${this.value[3]}${this.value[3]}`;\n      }\n\n      $input = DOMUtils.createElement(\"input\", this.additionalElement, { className: `es-body__section__input es-body__section__input--${this.type}`, value: this.value }, { type: this.type });\n    } else {\n      $input = DOMUtils.createElement(\"input\", $inputGroup, { className: `es-body__section__input es-body__section__input--${this.type}`, value: this.value }, { type: this.type });\n    }\n\n\n    if (this.addOptions) {\n      if (this.addOptions.min !== null) {\n        $input.setAttribute(\"min\", this.addOptions.min);\n      }\n\n      if (this.addOptions.min !== null) {\n        $input.setAttribute(\"max\", this.addOptions.max);\n      }\n\n      if (this.addOptions.placeholder !== null) {\n        $input.placeholder = this.addOptions.placeholder;\n      }\n    }\n\n    if (this.type !== \"color\") {\n      this.additionalElement = DOMUtils.createElement(\"span\", $inputGroup, { className: \"es-body__section__input-underline\" }); // Underline\n    }\n\n    this.element = $input;\n\n    this.bindCallback();\n  }\n\n  bindCallback() {\n    this.element.addEventListener(\"input\", () => {\n      if (this.type === \"color\") {\n        this.additionalElement.style.background = this.getValue();\n      }\n\n      this.callback(this.getValue());\n    });\n  }\n\n  getValue() {\n    if (this.addOptions) {\n      if (this.addOptions.min !== null) {\n        if (this.addOptions.min > this.element.value) {\n          return this.addOptions.min;\n        }\n      }\n\n      if (this.addOptions.max !== null) {\n        if (this.addOptions.max < this.element.value) {\n          return this.addOptions.max;\n        }\n      }\n    }\n\n    return this.element.value;\n  }\n\n  setValue(val) {\n    this.element.value = val;\n  }\n}\n","import DOMUtils from \"../../utils/DOMUtils\";\n\nexport default class Progress {\n  constructor(section, value, callback) {\n    this.element = null;\n    this.trackValue = null;\n    this.section = section;\n    this.value = Math.max(0, Math.min(value, 1));\n    this.callback = callback || null;\n    this.create();\n  }\n\n  create() {\n    const $inputGroup = DOMUtils.createElement(\"span\", this.section, { className: \"es-body__section__progress-group\" });\n\n    const $input = DOMUtils.createElement(\"input\", $inputGroup, { className: \"es-body__section__progress\" }, { type: \"hidden\", value: this.value });\n\n    const $track = DOMUtils.createElement(\"div\", $inputGroup, { className: \"es-body__section__progress-track\" }); // Track\n\n    this.trackValue = DOMUtils.createElement(\"div\", $track, { className: \"es-body__section__slider-track__progress-value\" }); // Track value\n\n    this.trackValue.style.width = `${this.value * 100}%`;\n\n    this.element = $input;\n    this.track = $track;\n\n    this.bindCallback();\n  }\n\n  bindCallback() {\n    this.element.addEventListener(\"input\", () => {\n      this.callback(this.getValue());\n      this.SliderMovementManager.setHandleValue();\n    });\n  }\n\n  getValue() {\n    return this.element.value;\n  }\n\n  setValue(val) {\n    const value = Math.max(0, Math.min(val, 1));\n    this.element.value = value;\n    this.trackValue.style.width = `${value * 100}%`;\n  }\n}\n","import DOMUtils from \"../../utils/DOMUtils\";\n\nexport default class Radio {\n  constructor(section, index, options, checkedIndex, callback) {\n    this.element = null;\n    this.radios = [];\n    this.section = section;\n    this.index = index;\n    this.options = options || [];\n    this.checkedIndex = checkedIndex;\n    this.callback = callback || null;\n    this.create();\n  }\n\n  create() {\n    const $group = DOMUtils.createElement(\"div\", this.section, { className: \"es-body__section__radio-group\" });\n\n    this.options.forEach((v, i) => {\n      const $label = DOMUtils.createElement(\"label\", $group, { className: \"es-body__section__label\" });\n\n      const $radio = DOMUtils.createElement(\"input\", $label, { className: \"es-body__section__checkbox\", checked: (i === this.checkedIndex) }, { type: \"radio\", name: `EasySettingsPanel-${this.index}` });\n\n      const $icon = DOMUtils.createElement(\"span\", $label, { className: \"es-body__section__label__icon\" }, { tabindex: 0 }); // Label icon\n\n      DOMUtils.createElement(\"span\", $icon, { className: \"es-body__section__label__icon--focused\" }); // labelIconFocused\n\n      $icon.addEventListener(\"keydown\", (e) => {\n        if (e.keyCode === 32 || e.keyCode === 13) {\n          this.setValue(i);\n          DOMUtils.dispatchEvent($group, \"change\");\n        }\n      });\n\n      DOMUtils.createElement(\"span\", $label, { innerHTML: v }); // Label text\n\n      this.radios.push($radio);\n    });\n\n    this.element = $group;\n\n    this.bindCallback();\n  }\n\n  bindCallback() {\n    this.element.addEventListener(\"change\", () => {\n      this.callback(this.getValue());\n    });\n  }\n\n  getValue() {\n    let index = -1;\n    this.radios.forEach((v, i) => {\n      if (v.checked) {\n        index = i;\n      }\n    });\n\n    return index;\n  }\n\n  setValue(val) {\n    this.radios.forEach((v, i) => {\n      v.checked = (i === val); // eslint-disable-line no-param-reassign\n    });\n  }\n}\n","import DOMUtils from \"../../utils/DOMUtils\";\nimport SliderMovementManager from \"./SliderMovementManager\";\n\nexport default class Slider {\n  constructor(section, value, min, max, callback) {\n    this.element = null;\n    this.section = section;\n    this.value = value;\n    this.min = min;\n    this.max = max;\n    this.callback = callback || null;\n    this.SliderMovementManager = null;\n    this.create();\n  }\n\n  create() {\n    const $inputGroup = DOMUtils.createElement(\"span\", this.section, { className: \"es-body__section__slider-group\" });\n\n    if (this.min === null) {\n      this.min = 0;\n    }\n\n    if (this.max === null) {\n      this.max = 100;\n    }\n\n    const $input = DOMUtils.createElement(\"input\", $inputGroup, { className: \"es-body__section__slider\" }, { type: \"range\", min: this.min, max: this.max, value: this.value });\n\n    const $track = DOMUtils.createElement(\"div\", $inputGroup, { className: \"es-body__section__slider-track\" }); // Track\n    const $trackValue = DOMUtils.createElement(\"div\", $track, { className: \"es-body__section__slider-track__slider-value\" }); // Track\n    const $handle = DOMUtils.createElement(\"button\", $track, { className: \"es-body__section__slider-track__slider-handle\" }); // Track\n\n    this.SliderMovementManager = new SliderMovementManager($handle, $track, $input, $trackValue);\n\n    this.SliderMovementManager.setHandleValue(this.value);\n\n    $handle.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 39) {\n        this.element.value++;\n        DOMUtils.dispatchEvent(this.element, \"input\");\n      }\n\n      if (e.keyCode === 37) {\n        this.element.value--;\n        DOMUtils.dispatchEvent(this.element, \"input\");\n      }\n    });\n\n    this.element = $input;\n\n    this.bindCallback();\n  }\n\n  bindCallback() {\n    this.element.addEventListener(\"input\", () => {\n      this.callback(this.getValue());\n      this.SliderMovementManager.setHandleValue();\n    });\n  }\n\n  getValue() {\n    return this.element.value;\n  }\n\n  setValue(val) {\n    this.element.value = val;\n    this.SliderMovementManager.setHandleValue();\n  }\n}\n","import DOMUtils from \"../../utils/DOMUtils\";\n\nexport default class trackMovementManager {\n  constructor(handle, track, input, trackValue) {\n    // this.panel = panel;\n    this.handle = handle;\n    this.track = track;\n    this.input = input;\n    this.trackValue = trackValue;\n\n    this.offset = 0;\n    this.startPos = {\n      x: 0,\n      y: 0,\n    };\n\n    this.startPosOfPanel = {\n      x: 8,\n      y: 0,\n    };\n\n    this.handleMovement = this.handleMovement.bind(this);\n    this.bindEvents();\n  }\n\n  bindEvents() {\n    this.handle.addEventListener(\"mousedown\", (e) => {\n      this.startPos = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n\n      const handleOffset = this.handle.getBoundingClientRect();\n      const trackOffset = this.track.getBoundingClientRect();\n\n      this.startPosOfPanel = {\n        x: handleOffset.left - trackOffset.left,\n      };\n\n      document.addEventListener(\"mousemove\", this.handleMovement);\n      document.addEventListener(\"mouseup\", () => {\n        document.removeEventListener(\"mousemove\", this.handleMovement);\n      });\n    });\n  }\n\n  handleMovement(e) {\n    this.offset = this.startPosOfPanel.x + (e.pageX - this.startPos.x);\n    if (this.offset < 0) {\n      this.offset = 0;\n    }\n\n    if (this.offset > (this.track.offsetWidth - this.handle.offsetWidth)) {\n      this.offset = this.track.offsetWidth - this.handle.offsetWidth;\n    }\n\n    this.minValueStyle();\n    this.handle.style.left = `${this.offset}px`;\n\n    this.setInputValue();\n  }\n\n  setInputValue() {\n    const max = this.track.offsetWidth - this.handle.offsetWidth;\n\n    const $inputMin = this.input.getAttribute(\"min\") * 1;\n    const $inputMax = this.input.getAttribute(\"max\") - $inputMin;\n\n    this.input.value = ($inputMax * (this.offset / max)) + $inputMin;\n\n    DOMUtils.dispatchEvent(this.input, \"input\");\n  }\n\n  setHandleValue() {\n    const max = this.track.offsetWidth - this.handle.offsetWidth;\n\n    const $inputMin = this.input.getAttribute(\"min\") * 1;\n    const $inputMax = this.input.getAttribute(\"max\") - $inputMin;\n\n    this.trackValue.style.width = `${100 * ((this.input.value - $inputMin) / $inputMax)}%`;\n\n    this.offset = max * ((this.input.value - $inputMin) / $inputMax);\n\n    this.minValueStyle();\n    this.handle.style.left = `${this.offset}px`;\n  }\n\n  minValueStyle() {\n    const classes = this.handle.className.split(\" \");\n    const minValClass = \"es-body__section__slider-track__slider-handle--min-value\";\n    const index = classes.indexOf(minValClass);\n    if (this.offset <= 0) {\n      if (index < 0) {\n        classes.push(minValClass);\n        this.handle.className = classes.join(\" \");\n      }\n    } else if (index >= 0) {\n      classes.splice(index, 1);\n      this.handle.className = classes.join(\" \");\n    }\n  }\n}\n","import DOMUtils from \"../../utils/DOMUtils\";\n\nexport default class Textarea {\n  constructor(section, value, callback, addOptions) {\n    this.element = null;\n    this.section = section;\n    this.value = value;\n    this.callback = callback || null;\n    this.addOptions = addOptions;\n    this.create();\n  }\n\n  create() {\n    const $inputGroup = DOMUtils.createElement(\"span\", this.section, { className: \"es-body__section__input-group\" });\n\n    const $input = DOMUtils.createElement(\"textarea\", $inputGroup, { className: \"es-body__section__input es-body__section__input--textarea\", innerHTML: this.value });\n\n    if (this.addOptions.placeholder !== null) {\n      $input.placeholder = this.addOptions.placeholder;\n    }\n\n    DOMUtils.createElement(\"span\", $inputGroup, { className: \"es-body__section__input-underline\" }); // Underline\n\n    this.element = $input;\n\n    this.bindCallback();\n  }\n\n  bindCallback() {\n    this.element.addEventListener(\"input\", () => {\n      this.callback(this.getValue());\n    });\n  }\n\n  getValue() {\n    return this.element.innerHTML;\n  }\n\n  setValue(val) {\n    this.element.innerHTML = val;\n  }\n}\n","export default class DOMUtils {\n  static createElement(type, parent, options, attributes) {\n    const $el = document.createElement(type);\n\n    if (options) {\n      for (const [key, value] of Object.entries(options)) {\n        $el[key] = value;\n      }\n    }\n\n    if (attributes) {\n      for (const [key, value] of Object.entries(attributes)) {\n        $el.setAttribute(key, value);\n      }\n    }\n\n    if (parent) {\n      parent.appendChild($el);\n    }\n\n    return $el;\n  }\n\n  static dispatchEvent(element, event) {\n    if (\"createEvent\" in document) {\n      const evt = document.createEvent(\"HTMLEvents\");\n      evt.initEvent(event, false, true);\n      element.dispatchEvent(evt);\n    } else {\n      element.fireEvent(\"onchange\");\n    }\n  }\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}